@model IEnumerable<Database.User>
@{
    Layout = "~/Views/Shared/_CustomMapLayout.cshtml";
}

@section Head{
    <link rel="stylesheet" href="@Url.Content("~/Scripts/liflet/leaflet.css")">
    <style>
        .map {
            height: 720px
        }
    </style>

    <link href="https://api.tiles.mapbox.com/mapbox-gl-js/v0.35.1/mapbox-gl.css" rel='stylesheet' />


}


@section Scripts
{
    <script src="@Url.Content("~/Scripts/liflet/leaflet.js")"></script>
    <script src="@Url.Content("~/Scripts/mapBoxJS.js")"></script>
    <script src="@Url.Content("~/Scripts/LifletMapBox.js")"></script>
    <script src="@Url.Content("~/Scripts/UsersScripts/lifletController.js")"></script>

    @*<script src="https://api.tiles.mapbox.com/mapbox-gl-js/v0.35.1/mapbox-gl.js"></script>
        <script src="http://rawgit.com/mapbox/mapbox-gl-leaflet/master/leaflet-mapbox-gl.js"></script>*@

    @*<script src="@Url.Content("~/Scripts/UsersScripts/mapController.js")"></script>*@
}



<div class="row-fluid">
    <div class="span12">
        <div id="map" class="map"></div>
        <div id="msg">Click to add a point.</div>
    </div>
</div>

<div class="">
    <button onclick="getLocation()">Enter coordinate</button>
</div>

@*<button class="openUserInit">Set</button>

    <div id="userPopUp" style="display:none;">
        <button id="closbtn">X</button>
        <div id="userContent"></div>
    </div>

    <script type="text/javascript">
        function ShowUserValue() {
            $("#UserPopUp").toggle(1000);//.dialog("open");
        }
    </script>*@






@*<script>
        var TeamDetailPostBackURL = '/Home/InitUser';
        $(function () {
            $(".openUserInit").click(function () {
                //debugger;
                var $buttonClicked = $(this);
                //var id = $buttonClicked.attr('data-id');
                var options = { "backdrop": "static", keyboard: true };
                $.ajax({
                    type: "GET",
                    url: TeamDetailPostBackURL,
                    contentType: "application/json; charset=utf-8",
                    //data: { "Id": id },
                    datatype: "json",
                    success: function (data) {
                        //debugger;
                        $('#userContent').html(data);
                        $('#userPopUp').modal(options);
                        $('#userPopUp').modal('show');

                    },
                    error: function () {
                        alert("Dynamic content load failed.");
                    }
                });
            });
            //$("#closebtn").on('click',function(){
            //    $('#myModal').modal('hide');

            $("#closbtn").click(function () {
                $('#userPopUp').modal('hide');
            });
        });

    </script>*@






@*@Ajax.ActionLink("Open popup", "InitUser", new AjaxOptions { HttpMethod = "GET", UpdateTargetId = "userPopUp", InsertionMode = InsertionMode.Replace, OnSuccess = "ShowUserValue" })<br />*@

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.UserName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.@long)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.lat)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.@long)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.lat)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.UserId }) |
                @Html.ActionLink("Details", "Details", new { id = item.UserId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.UserId })
            </td>
        </tr>
    }

</table>

