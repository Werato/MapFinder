@model IEnumerable<Database.User>

@{
    ViewBag.Title = "CandyHook";
    Layout = "~/Views/Shared/_CustomMapLayout.cshtml";

    Random rnd = new Random();
    int q = rnd.Next(1, 1000);

}
@section Scripts
{
    <script src="@Url.Content("~/Scripts/ol.js")"></script>
    <script src="@Url.Content((String.Format("~/Scripts/UsersScripts/mapController.js?v={0}", q)))"></script>
    <script src="@Url.Content("~/Scripts/UsersScripts/pageController.js")"></script>
}

<div class="row-fluid">
    <div class="span12">
        <div id="map" class="map"></div>
        <div id="msg">Click to add a point.</div>
        <div id="info" style="display: none;"></div>
        <label for="track">
            track position
            <input id="track" type="checkbox" />
        </label>
        <p>
            @string.Format("{0:C2}", "Ящзф")
            position accuracy : <code id="accuracy"></code>&nbsp;&nbsp;
            altitude : <code id="altitude"></code>&nbsp;&nbsp;
            altitude accuracy : <code id="altitudeAccuracy"></code>&nbsp;&nbsp;
            heading : <code id="heading"></code>&nbsp;&nbsp;
            speed : <code id="speed"></code>
        </p>
    </div>
</div>

<!-- Trigger the modal with a button -->
<button type="button" class="btn btn-info btn-lg callcs" data-toggle="modal" data-target="#newUserPP">New notice</button>

<!-- Modal -->
<div id="newUserPP" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">New user</h4>

            </div>
            <div class="modal-body">
                <label for="Name">Name:</label> <input name="Name" placeholder="Name" id="Name" type="text" class="form-control name" />
                <label for="Soname">Soname:</label> <input name="Soname" placeholder="Soname" id="Soname" type="text" class="form-control soname" />
                <label for="password">Password:</label> <input name="password" placeholder="password" id="password" type="password" class="form-control password" />
                <label for="Email">Email:</label> <input name="Email" placeholder="Email" id="Email" type="email" class="form-control email" />
                <label for="Phone">Phone:</label> <input name="Phone" placeholder="Phone" id="Phone" type="number" class="form-control phone" />
                <label for="Price">Price:</label> <input name="Price" placeholder="Price" id="Price" type="number" class="form-control price" />
                <label for="Description">Description:</label> 
                <textarea name="Description" id="Description" class="form-control description" rows="5"></textarea>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default js-save-user" style="float:left">Save</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>


@*@Ajax.ActionLink("Open popup", "InitUser", new AjaxOptions { HttpMethod = "GET", UpdateTargetId = "userPopUp", InsertionMode = InsertionMode.Replace, OnSuccess = "ShowUserValue" })<br />*@
@*
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.@long)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.lat)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.@long)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.lat)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.UserId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.UserId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.UserId })
                </td>
            </tr>
        }

    </table>
*@
